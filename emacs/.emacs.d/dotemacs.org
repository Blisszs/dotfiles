Welcome to my emacs config

planning to add centaur bars if needed.
company and projectile

* Doom-modeline
#+BEGIN_SRC emacs-lisp
(use-package doom-modeline
:ensure t
:config (doom-modeline-mode 1))
#+END_SRC
* emacs
** interface clutter
 #+BEGIN_SRC emacs-lisp
 (menu-bar-mode -1)
 (tool-bar-mode -1)
 (scroll-bar-mode -1)
 #+END_SRC
** line number
   #+BEGIN_SRC emacs-lisp
   (global-display-line-numbers-mode 1)
   #+END_SRC
** font
 #+BEGIN_SRC emacs-lisp
 (set-face-attribute 'default nil :font "terminus-12")
 #+END_SRC
** line wrapping 
   #+BEGIN_SRC emacs-lisp
   (global-visual-line-mode 1)
   #+END_SRC
** highlight parentheses
   #+BEGIN_SRC emacs-lisp
   (show-paren-mode 1)
   #+END_SRC
* colortheme
#+BEGIN_SRC emacs-lisp
(use-package base16-theme
:ensure t
:config (load-theme 'base16-default-dark t))
#+END_SRC
* org-bullets
#+BEGIN_SRC emacs-lisp
(use-package org-bullets
:ensure t
:hook (org-mode . org-bullets-mode))
;(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC
* evil mode
  #+BEGIN_SRC emacs-lisp
  (use-package evil
  :ensure t
  :config (evil-mode 1))
  #+END_SRC
* magit
  #+BEGIN_SRC emacs-lisp
  (use-package magit
  :ensure t)
  #+END_SRC
* auctex
#+BEGIN_SRC emacs-lisp
(use-package auctex
:defer t
:ensure t
:config)
#+END_SRC
* ivy 
#+BEGIN_SRC emacs-lisp
(use-package ivy
:ensure t
:config (ivy-mode 1))
#+END_SRC
* counsel
#+BEGIN_SRC emacs-lisp
(use-package counsel
:ensure t
:config (counsel-mode 1))
#+END_SRC
* company
  #+BEGIN_SRC emacs-lisp
  (use-package company
  :ensure t
  :init
  (global-company-mode))
  #+END_SRC
* flycheck
* c++
** irony
  #+BEGIN_SRC emacs-lisp
  (use-package irony
  :ensure t
  :defer t
  :hook
  (((c++-mode c-mode objc-mode) . irony-mode)
  (irony-mode . irony-cdb-autosetup-compile-options)))
  #+END_SRC
** company-irony
   #+BEGIN_SRC emacs-lisp
   (use-package company-irony
   :ensure t
   :requires (company)
   :config (add-to-list 'company-backends 'company-irony))
   #+END_SRC
** flycheck-irony
   #+BEGIN_SRC emacs-lisp
   (use-package flycheck-irony
   :ensure t
   :after (add-hook 'flycheck-mode-hook #'flycheck-irony-setup))
   #+END_SRC
   
* to be added
** multiple cursors 
 #+BEGIN_SRC emacs-lisp

 #+END_SRC
** smartparens
   #+BEGIN_SRC emacs-lisp
   
   #+END_SRC
** agressive inndent
